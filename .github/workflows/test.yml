name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04, macOS-latest, windows-latest ]
        python-version: [3.8]
        include:
          - os: ubuntu-latest
            python-version: 3.7
          - os: ubuntu-latest
            python-version: 3.9

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up conda
      uses: s-weigand/setup-conda@v1
      with:
        activate-conda: false  # don't switch Python version

    - name: Install sox using conda
      # MP3 support under Linux and macOS, see
      # https://github.com/conda-forge/sox-feedstock/pull/18
      run: |
        conda config --add channels conda-forge
        conda config --set channel_priority strict
        conda install sox
      if: matrix.os != 'ubuntu-18-04'

    - name: Prepare Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg mediainfo
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-20.04'

    - name: Prepare OSX
      run: brew install ffmpeg mediainfo
      if: matrix.os == 'macOS-latest'

    - name: Prepare Windows
      run: choco install ffmpeg mediainfo-cli
      if: matrix.os == 'windows-latest'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r docs/requirements.txt
        pip install -r tests/requirements.txt

    - name: Test with pytest
      run: python -m pytest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
      if: matrix.os == 'ubuntu-20.04'

    - name: Test building documentation
      run: python -m sphinx docs/ docs/_build/ -b html -W
      if: matrix.os == 'ubuntu-18.04'

    - name: Check links in documentation
      run: python -m sphinx docs/ docs/_build/ -b linkcheck -W
      if: matrix.os == 'ubuntu-18.04'
